name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend tests and linting
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm ci

      - name: Check backend code quality
        run: |
          echo "Running backend checks..."
          node --version
          npm --version

      - name: Test backend startup
        run: |
          timeout 10s npm start &
          sleep 5
          curl -f http://localhost:3000/health || exit 1

  # Frontend build and tests
  frontend:
    name: Frontend Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: dashboard/package-lock.json

      - name: Install dashboard dependencies
        working-directory: ./dashboard
        run: npm ci

      - name: Build dashboard
        working-directory: ./dashboard
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-build
          path: dashboard/dist/
          retention-days: 7

  # Docker build test
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: threat-detection-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build dashboard Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./dashboard
          file: ./dashboard/Dockerfile
          push: false
          tags: threat-detection-dashboard:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker Compose
        run: |
          docker-compose config
          echo "Docker Compose configuration is valid"
